riot.tag2("console",'<bar-main></bar-main> <nav></nav> <article> <h1>{title}</h1> <p>{body}</p> <button onclick="{addRoute}"> Add Route </button> <ul if="{isFirst}"> <li each="{data}"><a onclick="riot.route(\'/firstDetail/{id}\')">{title}</a></li> </ul> </article>','console,[riot-tag="console"],[data-is="console"]{ display: block; font-family: sans-serif; margin-right: 0; margin-bottom: 130px; margin-left: 50px; padding: 1em; text-align: center; color: #666; } console ul,[riot-tag="console"] ul,[data-is="console"] ul{ padding: 10px; list-style: none; } console li,[riot-tag="console"] li,[data-is="console"] li{ display: inline-block; margin: 5px; } console a,[riot-tag="console"] a,[data-is="console"] a{ display: block; background: #f7f7f7; text-decoration: none; width: 150px; height: 150px; line-height: 150px; color: inherit; } console a:hover,[riot-tag="console"] a:hover,[data-is="console"] a:hover{ background: #eee; color: #000; } @media (min-width: 480px) { console,[riot-tag="console"],[data-is="console"]{ margin-right: 200px; margin-bottom: 0; } }',"",function(opts){var self=this;self.title="Now loading...";self.body="";self.data=[{id:"apple",title:"Apple",body:"The world biggest fruit company."},{id:"orange",title:"Orange",body:"I don't have the word for it..."}];var r=riot.route.create();r("",home);r("first",first);r("first/*",firstDetail);r("second",second);r(home);function home(){self.update({title:"Home of the great app",body:"Timeline or dashboard as you like!",isFirst:false})}function first(){self.update({title:"First feature of your app",body:"It could be a list of something for example.",isFirst:true})}function firstDetail(id){self.update({title:selected.title,body:selected.body,isFirst:false});riot.route("/firstDetail")}function second(){self.update({title:"Second feature of your app",body:"It could be a config page for example.",isFirst:false})}function newId(){self.update({title:"newId",body:"NewID.",isFirst:false})}this.addRoute=function(){console.log("new");r("newId/id",newId);riot.route("/newId/id")}.bind(this);riot.route("/fruit/*",function(name){self.update({title:"fff",body:"ffff.",isFirst:false});console.log("The detail of "+name)})});riot.tag2("panes-right","<h2>Help</h2> <p>{helptext}</p>",'panes-right,[riot-tag="panes-right"],[data-is="panes-right"]{ position: fixed; top: auto; right: 0; bottom: 0; left: 0; width: 100%; height: 130px; box-sizing: border-box; font-family: sans-serif; margin: 0; padding: 1em; text-align: center; color: #666; background: #f7f7f7; } @media (min-width: 480px) { panes-right,[riot-tag="panes-right"],[data-is="panes-right"]{ top: 0; right: 0; bottom: auto; left: auto; width: 200px; height: 100%; } }',"",function(opts){var self=this;self.data={first:"This is the help for the first page.",second:"This is the help for the second page."};var r=riot.route.create();r("*",function(id){self.helptext=self.data[id]||"Help not found.";self.update()});r(function(){self.helptext="Click the navigation on the left edge.";self.update()})});riot.tag2("todo",'<div class="container"> <div class="panel panel-primary chat-bg" style="align-items:center; justify-content:center;"> <div class="panel-heading"> <h3 class="panel-title">TODO List</h3> </div> <div class="list-group"> <div each="{todos}" class="list-group-item" key="{id}"> <div class="pull-right"> <button class="btn btn-xs btn-danger" onclick="{parent.removeTodo}"> Delete </button> </div> {name} </div> <div class="list-group-item"> <form id="todo-form" name="todo-form" class="list-group-item" onsubmit="{createTodo}"> <input text="form-control" type="text" name="todoInput" onkeyup="{edit}" placeholder="Enter a message and press enter"> </form> </div> </div> </div> </div>',"","",function(opts){var self=this;self.todoToAdd="";var store=new JSData.DS;var firebaseAdapter=new DSFirebaseAdapter({basePath:"https://app-pnw3dev.firebaseio.com"});store.registerAdapter("firebase",firebaseAdapter,{default:true});var TodoStore=store.defineResource({name:"todo",afterInject:function(){TodoStore.emit("change")},afterEject:function(){TodoStore.emit("change")}});for(var resourceName in store.definitions){var Resource=store.definitions[resourceName];var ref=firebaseAdapter.ref.child(Resource.endpoint);ref.on("child_changed",function(dataSnapshot){var data=dataSnapshot.val();if(data[Resource.idAttribute]){Resource.inject(data)}});ref.on("child_removed",function(dataSnapshot){var data=dataSnapshot.val();if(data[Resource.idAttribute]){Resource.eject(data[Resource.idAttribute])}})}TodoStore.on("change",function(){self.todos=TodoStore.getAll();self.update()});self.on("mount",function(){TodoStore.findAll()});this.edit=function(e){self.todoToAdd=e.target.value}.bind(this);this.createTodo=function(){if(self.todoToAdd){TodoStore.create({name:self.todoToAdd}).then(function(){self.todoToAdd=self.todoInput.value=""})}}.bind(this);this.removeTodo=function(e){TodoStore.destroy(e.item.id)}.bind(this)});riot.tag2("nav",'<a each="{links}" href="#{url}" class="{selected: parent.selectedId === url}"> {name} </a>','nav,[riot-tag="nav"],[data-is="nav"]{ position: fixed; top: 0; left: 0; height: 100%; box-sizing: border-box; font-family: sans-serif; text-align: center; color: #666; background: #333; width: 50px; transition: width .2s; } nav:hover,[riot-tag="nav"]:hover,[data-is="nav"]:hover{ width: 60px; } nav a,[riot-tag="nav"] a,[data-is="nav"] a{ display: block; box-sizing: border-box; width: 100%; height: 50px; line-height: 50px; padding: 0 .8em; color: white; text-decoration: none; background: #444; } nav a:hover,[riot-tag="nav"] a:hover,[data-is="nav"] a:hover{ background: #666; } nav a.selected,[riot-tag="nav"] a.selected,[data-is="nav"] a.selected{ background: teal; }',"",function(opts){var self=this;this.links=[{name:"H",url:""},{name:"F",url:"first"},{name:"S",url:"second"}];var r=riot.route.create();r(highlightCurrent);function highlightCurrent(id){self.selectedId=id;self.update()}});
//# sourceMappingURL=all.min.js.map